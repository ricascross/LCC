#BlueJ class context
comment0.target=HoteisInc
comment1.params=name\ ordem
comment1.target=void\ juntaOrdenacao(java.lang.String,\ java.util.Comparator)
comment10.params=
comment10.target=HoteisInc\ clone()
comment10.text=\n\ Devolve\ uma\ copia\ da\ companhia\ de\ hoteis\n\ @return\ HoteisInc\n
comment11.params=obj
comment11.target=boolean\ equals(java.lang.Object)
comment11.text=\n\ Verifica\ a\ igualdade\ com\ outro\ objeto\n\ @return\ boolean\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\n\ Formata\ tudo\ para\ representacao\ textual\n\ @return\ String\n
comment13.params=hotel
comment13.target=void\ insereHotel(Hotel)
comment13.text=\n\ Insere\ um\ novo\ hotel\n\ @param\ hoteis\n
comment14.params=code
comment14.target=boolean\ existeHotel(java.lang.String)
comment14.text=\n\ Verifica\ se\ existe\ um\ hotel\ segundo\ um\ codigo\ fornecido\n\ @return\ boolean\ \n
comment15.params=
comment15.target=int\ quantos()
comment15.text=\n\ Devolve\ quantos\ hoteis\ estao\ inseridos\n\ \n\ @return\ int\ \n
comment16.params=local
comment16.target=int\ quantosHoteis(java.lang.String)
comment16.text=\n\ Devolve\ o\ numero\ de\ hoteis\ de\ uma\ dada\ localidade\n\ @return\ int\n
comment17.params=code
comment17.target=Hotel\ getHotel(java.lang.String)
comment17.text=\n\ Devolve\ o\ hotel\ segundo\ um\ determinado\ codigo\n\ @return\ Hotel\n
comment18.params=
comment18.target=java.util.List\ getHoteisList()
comment18.text=\n\ Devolver\ uma\ lista\ que\ contem\ a\ copia\ de\ todos\ os\ hoteis\ do\ sistema\n\ @return\ List<Hotel>\n
comment19.params=hs
comment19.target=void\ adiciona(java.util.Set)
comment2.params=name
comment2.target=java.util.Comparator\ getOrdem(java.lang.String)
comment20.params=epoca
comment20.target=void\ mudaEpoca(java.lang.String)
comment20.text=\n\ Muda\ para\ epoca\ alta\ ou\ para\ epoca\ baixa\ e\ muda\ o\ preco\ do\ quarto.\n\ Epoca\ alta\ aumenta\ 20\ euros,\ epoca\ baixa\ diminui\ 20\ euros.\n
comment21.params=
comment21.target=long\ valorTotalDiario()
comment21.text=\n\ Calcula\ o\ valor\ total\ diario\ recebido\ pela\ cadeia\n\ @return\ total\n
comment22.params=
comment22.target=java.util.TreeSet\ ordenarHoteis()
comment22.text=\n\ Ordena\ os\ hoteis\ usando\ o\ TreeSet.\n\ @return\ ordHoteis\n
comment23.params=comparador
comment23.target=java.util.TreeSet\ ordenarHoteis(java.util.Comparator)
comment23.text=\n\ Ordena\ os\ hoteis\ usando\ o\ TreeSet\ atraves\ de\ um\ comparator\n
comment24.params=comparador
comment24.target=java.util.List\ ordenarHoteisLista(java.util.Comparator)
comment24.text=\n\ Ordena\ os\ hoteis\ usando\ Listas\n
comment25.params=criterio
comment25.target=java.util.Iterator\ ordenarHoteis(java.lang.String)
comment3.params=
comment3.target=HoteisInc()
comment3.text=\n\ Contrutor\ por\ omissao\n
comment4.params=outrosHoteis
comment4.target=HoteisInc(HoteisInc)
comment4.text=\n\ Contrutor\ por\ copia\n
comment5.params=novoHotel\ newName
comment5.target=HoteisInc(java.util.Map,\ java.lang.String)
comment5.text=\n\ Construtor\ Parametrizado\n\ @param\ hoteis\n\ @param\ nome\n
comment6.params=
comment6.target=java.lang.String\ getName()
comment6.text=\n\ Devolve\ o\ nome\ da\ companhia\ de\ hoteis\n\ \n\ @return\ String\n
comment7.params=newName
comment7.target=void\ setName(java.lang.String)
comment7.text=\n\ Insere\ um\ novo\ nome\ da\ companhia\ de\ hoteis\n\ @param\ hoteis\n
comment8.params=
comment8.target=java.util.Map\ getHoteis()
comment8.text=\n\ Obter\ uma\ copia\ do\ mapeamento\ de\ hoteis\n\ @return\ Map\n
comment9.params=hoteis
comment9.target=void\ setHoteis(java.util.Map)
comment9.text=\n\ Definir\ os\ hoteis\n\ @param\ hoteis\n
numComments=26
